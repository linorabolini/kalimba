import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, G as onMount, w as empty, A as mount_component, j as insert_dev, E as group_outros, m as transition_out, D as destroy_component, F as check_outros, t as transition_in, f as detach_dev, v as space, e as element, p as text, x as claim_space, a as claim_element, b as children, q as claim_text, g as attr_dev, h as add_location, r as append_dev, n as noop } from './index.e016ec25.js';

/* src/components/KalimbaSSR.svelte generated by Svelte v3.12.1 */

function create_fragment(ctx) {
	var switch_instance_anchor, current;

	var switch_value = ctx.MyComponent;

	function switch_props(ctx) {
		return { $$inline: true };
	}

	if (switch_value) {
		var switch_instance = new switch_value(switch_props());
	}

	const block = {
		c: function create() {
			if (switch_instance) switch_instance.$$.fragment.c();
			switch_instance_anchor = empty();
		},

		l: function claim(nodes) {
			if (switch_instance) switch_instance.$$.fragment.l(nodes);
			switch_instance_anchor = empty();
		},

		m: function mount(target, anchor) {
			if (switch_instance) {
				mount_component(switch_instance, target, anchor);
			}

			insert_dev(target, switch_instance_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			if (switch_value !== (switch_value = ctx.MyComponent)) {
				if (switch_instance) {
					group_outros();
					const old_component = switch_instance;
					transition_out(old_component.$$.fragment, 1, 0, () => {
						destroy_component(old_component, 1);
					});
					check_outros();
				}

				if (switch_value) {
					switch_instance = new switch_value(switch_props());

					switch_instance.$$.fragment.c();
					transition_in(switch_instance.$$.fragment, 1);
					mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
				} else {
					switch_instance = null;
				}
			}
		},

		i: function intro(local) {
			if (current) return;
			if (switch_instance) transition_in(switch_instance.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(switch_instance_anchor);
			}

			if (switch_instance) destroy_component(switch_instance, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment.name, type: "component", source: "", ctx });
	return block;
}

function instance($$self, $$props, $$invalidate) {
	let MyComponent;
  onMount(async () => {
    const module = await import('./Kalimba.5831ce46.js');
    $$invalidate('MyComponent', MyComponent = module.default);
  });

	$$self.$capture_state = () => {
		return {};
	};

	$$self.$inject_state = $$props => {
		if ('MyComponent' in $$props) $$invalidate('MyComponent', MyComponent = $$props.MyComponent);
	};

	return { MyComponent };
}

class KalimbaSSR extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, []);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "KalimbaSSR", options, id: create_fragment.name });
	}
}

/* src/routes/index.svelte generated by Svelte v3.12.1 */

const file = "src/routes/index.svelte";

function create_fragment$1(ctx) {
	var t0, h1, t1, t2, current;

	var kalimbassr = new KalimbaSSR({ $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			h1 = element("h1");
			t1 = text("Kalimba");
			t2 = space();
			kalimbassr.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_space(nodes);

			h1 = claim_element(nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t1 = claim_text(h1_nodes, "Kalimba");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			kalimbassr.$$.fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			document.title = "Sapper project template";
			attr_dev(h1, "class", "svelte-1kq13ls");
			add_location(h1, file, 17, 0, 280);
		},

		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, h1, anchor);
			append_dev(h1, t1);
			insert_dev(target, t2, anchor);
			mount_component(kalimbassr, target, anchor);
			current = true;
		},

		p: noop,

		i: function intro(local) {
			if (current) return;
			transition_in(kalimbassr.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(kalimbassr.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach_dev(t0);
				detach_dev(h1);
				detach_dev(t2);
			}

			destroy_component(kalimbassr, detaching);
		}
	};
	dispatch_dev("SvelteRegisterBlock", { block, id: create_fragment$1.name, type: "component", source: "", ctx });
	return block;
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment$1, safe_not_equal, []);
		dispatch_dev("SvelteRegisterComponent", { component: this, tagName: "Index", options, id: create_fragment$1.name });
	}
}

export default Index;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguOGUyNzNkYTIuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0thbGltYmFTU1Iuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIGltcG9ydCB7IG9uTW91bnQgfSBmcm9tIFwic3ZlbHRlXCI7XG5cbiAgbGV0IE15Q29tcG9uZW50O1xuICBvbk1vdW50KGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBtb2R1bGUgPSBhd2FpdCBpbXBvcnQoXCIuL0thbGltYmEuc3ZlbHRlXCIpO1xuICAgIE15Q29tcG9uZW50ID0gbW9kdWxlLmRlZmF1bHQ7XG4gIH0pO1xuPC9zY3JpcHQ+XG5cbjxzdmVsdGU6Y29tcG9uZW50IHRoaXM9e015Q29tcG9uZW50fSAvPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7d0JBVXdCLFdBQVc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NENBQVgsV0FBVzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FQakMsSUFBSSxXQUFXLENBQUM7RUFDaEIsT0FBTyxDQUFDLFlBQVk7SUFDbEIsTUFBTSxNQUFNLEdBQUcsTUFBTSxPQUFPLHVCQUFrQixDQUFDLENBQUM7Z0NBQ2hELFdBQVcsR0FBRyxNQUFNLENBQUMsUUFBTyxDQUFDO0dBQzlCLENBQUMsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
